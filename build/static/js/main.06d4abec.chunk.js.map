{"version":3,"sources":["components/persons.js","components/personform.js","components/filter.js","services/services.js","App.js","index.js"],"names":["Persons","persons","filter","onclick","console","log","person","name","includes","map","number","onClick","id","PersonForm","addPerson","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","onChange","type","Filter","handleFilterChange","baseUrl","services","getAll","axios","get","then","response","data","create","newObject","post","deletePerson","delete","update","put","Notification","message","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","error","setError","useEffect","Services","initialPersons","event","target","preventDefault","personObj","existingPerson","find","undefined","returnedPerson","concat","setTimeout","window","confirm","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06d4abec.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({persons,filter, onclick}) => {\r\n  console.log(persons)\r\n\r\n  return (\r\n  persons\r\n  .filter( person => person.name.includes(filter))\r\n  .map(person =>\r\n    <div key={person.id}>\r\n      <p>\r\n        {person.name} {person.number} {\" \"}\r\n        <button onClick={() => onclick(person.id)}>Delete</button>\r\n      </p>\r\n    </div>)\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({addPerson, handleNameChange, handleNumberChange, newName, newNumber}) => (\r\n\r\n  <form onSubmit={addPerson}>\r\n    <div>\r\n      name: \r\n      <input value={newName}\r\n      onChange={handleNameChange} />\r\n    </div>\r\n    <div>\r\n      number: \r\n      <input value={newNumber}\r\n      onChange={handleNumberChange}/>\r\n    </div>\r\n    <div>\r\n        <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilterChange}) => (\r\n  <form>\r\n    <div>\r\n        filter shown with \r\n        <input value={filter}\r\n        onChange={handleFilterChange}\r\n        />\r\n    </div>\r\n  </form>\r\n)\r\n\r\nexport default Filter","\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  \r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst services = { getAll, create, deletePerson, update }\r\n\r\nexport default services","\nimport React, { useState, useEffect } from 'react'\nimport Persons from './components/persons'\nimport PersonForm from './components/personform'\nimport Filter from './components/filter'\nimport Services from './services/services'\n\nconst Notification = ({ message, id }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div id={id}>\n      {message}\n    </div>\n  )\n}\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setNewFilter ] = useState('')\n  const [ message, setMessage] = useState(null)\n  const [ error, setError ] = useState(null)\n\n  useEffect(() => {\n    Services\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObj = {\n      name : newName,\n      number : newNumber\n    }\n\n    const existingPerson = persons.find(person => person.name === newName)\n\n    if (existingPerson !== undefined){\n      if(window.confirm(`${newName} is already added to phonebook,\n       replace the old number with a new one?`)){\n         Services\n          .update(existingPerson.id, personObj)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : returnedPerson))\n          })\n          .then(() => {\n            setMessage(\n              `Changed ${existingPerson.name}'s number`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setError(`Information of ${existingPerson.name} has laready been removed from the server`)\n            setTimeout(() => {\n              setError(null)\n            }, 5000)\n          })\n       }\n      return\n    }\n\n    Services\n      .create(personObj)\n      .then(returnedPerson => {\n        persons = persons.concat(returnedPerson)\n        setPersons(persons)\n        setNewName(\"\")\n        setNewNumber(\"\")\n      })\n      .then(() => {\n        setMessage(\n          `Added ${newName}`\n        )\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      console.log(persons)\n  }\n\n  const deletePerson = (id) => {\n\n    const person = persons.find(person => person.id === id); \n\n    if(window.confirm(`Delete ${person.name}`)){\n      Services\n        .deletePerson(id)\n        .then(() => {\n          Services.getAll().then(\n            initialPersons => {\n              setPersons(initialPersons)\n            })\n        })\n        .then(() => {\n          setMessage(\n            `Deleted ${person.name}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification id={'msg'} message={message} />\n      <Notification id={'err'} message={error} />\n      <Filter filter={filter}\n      handleFilterChange={handleFilterChange} />\n\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson}\n      handleNameChange={handleNameChange}\n      handleNumberChange={handleNumberChange} \n      newName={newName}\n      newNumber={newNumber}/>\n\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} onclick={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App\n","\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}